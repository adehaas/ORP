<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="TaskView"
		xmlns:view="orp.view.*">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.listClasses.IListItemRenderer;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			import orp.command.events.SaveTaskEvent;
			import orp.model.TaskListModel;
			import orp.service.ITaskService;
			import orp.utils.Calculator;
			import orp.view.events.AddTaskEvent;
			import orp.view.events.TextInputChangeEvent;
			import orp.vo.Task;
			
			import spark.components.DataGroup;
			import spark.events.TextOperationEvent;
			
			[Inject]
			public var model:TaskListModel;
			
			[Inject]
			public var service:ITaskService;
			
			protected function displayItemData(event:MouseEvent):void
			{
				if(event.target is DataGroup || event.target is Button)
					return;
				else
					var task:Task = event.target.data as Task;
				
				optimisticInput.text = task.optimistic.toString();
				realisticInput.text = task.realistic.toString();
				pessimisticInput.text = task.pessimistic.toString();
			}
			
			protected function handleFocusIn(event:FocusEvent):void
			{
				if(event.target.text == 0)
					event.target.text = '';
			}
			
			protected function handleFocusOut(event:FocusEvent):void
			{
				if(event.target.text == '')
					event.target.text = 0;
			}
			
			private function dispatchAddTaskToListEvent():void
			{
				dispatchEvent(new AddTaskEvent);
			}
			
			private function dispatchTextInputChangeEvent(event:TextOperationEvent):void
			{
				dispatchEvent(new TextInputChangeEvent(event.target as TextInput));
			}
		]]>
	</fx:Script>
	
	<s:Group top="5" bottom="5">
		
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>
		
		<s:HGroup paddingLeft="5" paddingRight="5" width="100%" height="100%" verticalAlign="middle">
			<s:Button label="+" id="addTaskButton" click="dispatchAddTaskToListEvent()" width="{addTaskButton.height}"/>
			<s:TextInput id="taskInput" width="260" height="{addTaskButton.height}" editable="true"/>
		</s:HGroup>
		
		<s:Scroller>
			<s:Group>
				<view:TaskList id="taskList" click="displayItemData(event)"/>
			</s:Group>
		</s:Scroller>
		
			<s:VGroup paddingLeft="5" paddingRight="5" width="100%">
				
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Label color="#000000" text="Optimistic"/>
					<s:Spacer width="100%"/>
					<s:TextInput id="optimisticInput" width="50" change="dispatchTextInputChangeEvent(event)" focusIn="handleFocusIn(event)" focusOut="handleFocusOut(event)"/>
				</s:HGroup>
				
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Label color="#000000" text="Realistic"/>
					<s:Spacer width="100%"/>
					<s:TextInput id="realisticInput" width="50" change="dispatchTextInputChangeEvent(event)" focusIn="handleFocusIn(event)" focusOut="handleFocusOut(event)"/>
				</s:HGroup>
				
				<s:HGroup width="100%" verticalAlign="middle">
					<s:Label color="#000000" text="Pessimistic"/>
					<s:Spacer width="100%"/>
					<s:TextInput id="pessimisticInput" width="50" change="dispatchTextInputChangeEvent(event)" focusIn="handleFocusIn(event)" focusOut="handleFocusOut(event)"/>
				</s:HGroup>
				
			</s:VGroup>
		
	</s:Group>
		
</s:View>
